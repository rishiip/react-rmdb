{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","images/search-icon.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","hooks/useMovieFetch.js","components/Movie.js","components/NotFound.js","GlobalStyle.js","App.js","index.js","images/no_image.jpg"],"names":["module","exports","__webpack_require__","p","Wrapper","styled","div","_templateObject","Object","taggedTemplateLiteral","Content","_templateObject2","LogoImg","img","_templateObject3","TMDBLogoImg","_templateObject4","Header","react_default","a","createElement","react_router_dom","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","concat","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","HeroImage_styles_templateObject","_ref","image","HeroImage_styles_templateObject2","Text","HeroImage_styles_templateObject3","HeroImage","title","text","HeroImage_styles_Wrapper","HeroImage_styles_Content","Grid_styles_templateObject","Grid_styles_templateObject2","Grid","header","children","Grid_styles_Wrapper","Grid_styles_Content","Image","Thumb_styles_templateObject","Thumb","movieId","clickable","Spinner","Spinner_styles_templateObject","SearchBar_styles_templateObject","SearchBar_styles_templateObject2","SearchBar","setSearchTerm","_useState","useState","_useState2","slicedToArray","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","SearchBar_styles_Wrapper","SearchBar_styles_Content","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button_styles_templateObject","Button","callback","Button_styles_Wrapper","onClick","defaultConfig","method","headers","Content-Type","apiSettings","fetchMovies","_fetchMovies","asyncToGenerator","_regeneratorRuntime","mark","_callee","searchTerm","page","endpoint","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","_x2","apply","this","arguments","fetchMovie","_fetchMovie","_callee2","_context2","_x3","fetchCredits","_fetchCredits","_callee3","creditsEndpoint","_context3","_x4","getRequestToken","_getRequestToken","_callee4","reqToken","_context4","request_token","authenticate","_authenticate","_callee5","requestToken","username","password","bodyData","sessionId","_context5","objectSpread","body","JSON","stringify","success","_x5","_x6","_x7","rateMovie","_rateMovie","_callee6","rating","_context6","_x8","_x9","_x10","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","_useHomeFetch","_useState3","_useState4","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","_useState9","_useState10","isLoadingMore","setIsLoadingMore","console","log","useHomeFetch_regeneratorRuntime","movies","_args","length","undefined","API","toConsumableArray","t0","setItem","useHomeFetch","Fragment","components_HeroImage","backdrop_path","original_title","overview","components_SearchBar","components_Grid","map","movie","components_Thumb","key","id","poster_path","NoImage","components_Spinner","components_Button","BreadCrumb_styles_templateObject","BreadCrumb_styles_templateObject2","BreadCrumb","movieTitle","BreadCrumb_styles_Wrapper","BreadCrumb_styles_Content","MovieInfo_styles_templateObject","backdrop","MovieInfo_styles_templateObject2","MovieInfo_styles_templateObject3","MovieInfo","MovieInfo_styles_Wrapper","MovieInfo_styles_Content","MovieInfo_styles_Text","className","vote_average","directors","director","credit_id","name","MovieInfoBar_styles_templateObject","MovieInfoBar_styles_templateObject2","MovieInfoBar","time","budget","revenue","MovieInfoBar_styles_Wrapper","MovieInfoBar_styles_Content","hours","Math","floor","mins","calcTime","Actor_styles_templateObject","Actor_styles_templateObject2","Actor","character","imageUrl","Actor_styles_Wrapper","Actor_styles_Image","useMovieFetch","useMovieFetch_regeneratorRuntime","credits","crew","filter","member","job","actors","cast","Movie","useParams","_useMovieFetch","components_BreadCrumb","components_MovieInfo","components_MovieInfoBar","runtime","actor","components_Actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","App","components_Header","react_router","path","element","components_Home","components_Movie","components_NotFound","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0e579681.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-movie-logo.5de5919a.svg\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","module.exports = __webpack_public_path__ + \"static/media/search-icon.80e9d8a2.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n\n  @media screen and (max-width: 500px){\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg = styled.img`\n  width: 100px;\n\n  @media screen and (max-width: 500px){\n    width: 150px;\n  }\n`;\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\n\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\n\nconst Header = () => (\n  <Wrapper>\n    <Content>\n      <Link to=\"/\">\n        <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\n      </Link>\n      <TMDBLogoImg src={TMDBLogo} alt=\"rmdb-logo\" />\n    </Content>\n  </Wrapper>\n);\n\nexport default Header;\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: linear-gradient(\n    to bottom, rgba(0,0,0,0)\n    41%, rgba(0,0,0,0.65)\n    100%\n  ),\n    url(${({image}) => image}), var(--darkGrey);\n  background-size: 100, cover;\n  background-position: center;\n  height: 600px;\n  position: relative;\n  animation: animateHeroImage 1s;\n\n  @keyframes animateHeroImage{\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 20px;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n  z-index: 100;\n  max-width: 700px;\n  position: absolute;\n  bottom: 40px;\n  margin-right: 20px;\n  min-height: 100px;\n  color: var(--white);\n\n  h1 {\n    font-size: var(--fontSuperBig);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n\n  p {\n    font-size: var(--fontMed);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontSmall);\n    }\n  }\n\n  @media screen and (max-width: 720px) {\n    max-width: 100%;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// Styles\nimport { Wrapper, Content, Text } from \"./HeroImage.styles\";\n\nconst HeroImage = ({ image, title, text }) => (\n  <Wrapper image={image}>\n    <Content>\n      <Text>\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </Text>\n    </Content>\n  </Wrapper>\n);\n\nHeroImage.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string,\n};\n\nexport default HeroImage;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  padding: 0 20px;\n\n  h1 {\n    color: var(--medGrey);\n\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig)\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 2rem;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// Styles\nimport { Wrapper, Content } from \"./Grid.styles\";\n\nconst Grid = ({ header, children }) => (\n  <Wrapper>\n    <h1>{header}</h1>\n    <Content>{children}</Content>\n  </Wrapper>\n);\n\nGrid.propTypes = {\n  header: PropTypes.string,\n};\n\nexport default Grid;\n","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 720px;\n  transition: all 0.3s;\n  object-fit: cover;\n  border-radius: 20px;\n  animation: animateThumb 0.5s;\n\n  :hover {\n    opacity: 0.8;\n  }\n\n  @keyframes animateThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n// Styles\nimport { Image } from \"./Thumb.styles\";\n\nconst Thumb = ({ image, movieId, clickable }) => (\n  <div>\n    {clickable ? (\n      <Link to={`/${movieId}`}>\n        <Image src={image} alt=\"movie-thumb\"></Image>\n      </Link>\n    ) : (\n      <Image src={image} alt=\"movie-thumb\"></Image>\n    )}\n  </div>\n);\n\nThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool,\n};\n\nexport default Thumb;\n","import { Spinner } from \"./Spinner.styles\";\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const Spinner = styled.div`\n  border: 5px solid var(--lightGrey);\n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  max-width: var(--maxWidth);\n  width: 100%;\n  height: 55px;\n  background: var(-medGrey);\n  margin: 0 auto;\n  border-radius: 40px;\n  color: var(--white);\n\n  img {\n    position: absolute;\n    left: 15px;\n    top: 14px;\n    width: 30px;\n  }\n\n  input {\n    font-size: 28px;\n    position: absolute;\n    left: 0;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: var(--white);\n\n    :focus {\n      outline: none;\n    }\n  }\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n// Image\nimport searchIcon from \"../../images/search-icon.svg\";\n// Styles\nimport { Wrapper, Content } from \"./SearchBar.styles\";\n\nconst SearchBar = ({ setSearchTerm }) => {\n  const [state, setState] = useState(\"\");\n  const initial = useRef(true);\n\n  useEffect(() => {\n    if (initial.current) {\n      initial.current = false;\n      return;\n    }\n    const timer = setTimeout(() => {\n      setSearchTerm(state);\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [setSearchTerm, state]);\n\n  return (\n    <Wrapper>\n      <Content>\n        <img src={searchIcon} alt=\"search-icon\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search Movie\"\n          onChange={(event) => setState(event.currentTarget.value)}\n          value={state}\n        />\n      </Content>\n    </Wrapper>\n  );\n};\n\nSearchBar.propTypes = {\n  callback: PropTypes.func,\n};\n\nexport default SearchBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.button`\n  display: block;\n  background: var(--darkGrey);\n  width: 25%;\n  min-width: 200px;\n  height: 60px;\n  border-radius: 30px;\n  color: var(--white);\n  border: 0;\n  font-size: var(--fontBig);\n  margin: 20px auto;\n  transition: all 0.3s;\n  outline: none;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// Styles\nimport { Wrapper } from \"./Button.styles\";\n\nconst Button = ({ text, callback }) => (\n  <Wrapper type=\"button\" onClick={callback}>\n    {text}\n  </Wrapper>\n);\n\nButton.propTypes = {\n  text: PropTypes.string,\n  callback: PropTypes.func,\n};\n\nexport default Button;\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = (stateName) => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};\n","import { useState, useEffect, useRef } from \"react\";\n\n// API\nimport API from \"../API\";\nimport { isPersistedState } from \"../helpers\";\n\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0,\n};\n\nexport const useHomeFetch = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n  console.log(searchTerm);\n\n  const fetchMovies = async (page, searchTerm = \"\") => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const movies = await API.fetchMovies(searchTerm, page);\n\n      setState((prev) => ({\n        ...movies,\n        results:\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\n      }));\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  // Initial Render and search\n  useEffect(() => {\n    if (!searchTerm) {\n      const sessionState = isPersistedState(\"homeState\");\n      if (sessionState) {\n        console.log(\"Grabbing from SS\");\n        setState(sessionState);\n        return;\n      }\n    }\n    console.log(\"Grabbing from API\");\n    setState(initialState);\n    fetchMovies(1, searchTerm);\n  }, [searchTerm]);\n\n  // Load More\n  useEffect(() => {\n    if (!isLoadingMore) return;\n    fetchMovies(state.page + 1, searchTerm);\n    setIsLoadingMore(false);\n  }, [isLoadingMore]);\n\n  // Write to sessionStorage\n  useEffect(() => {\n    if (!searchTerm) sessionStorage.setItem(\"homeState\", JSON.stringify(state));\n  }, [searchTerm, state]);\n\n  return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\n};\n","import React from \"react\";\n\n// Config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\n\n// Components\nimport HeroImage from \"./HeroImage\";\nimport Grid from \"./Grid\";\nimport Thumb from \"./Thumb\";\nimport Spinner from \"./Spinner\";\nimport SearchBar from \"./SearchBar\";\nimport Button from \"./Button\";\n\n// Hook\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\n\n// Image\nimport NoImage from \"../images/no_image.jpg\";\n\nconst Home = () => {\n  const {\n    state,\n    loading,\n    error,\n    searchTerm,\n    setSearchTerm,\n    setIsLoadingMore,\n  } = useHomeFetch();\n  console.log(state);\n\n  if (error) return <div>Something went wrong.</div>;\n\n  return (\n    <>\n      {!searchTerm && state.results[0] ? (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n          title={state.results[0].original_title}\n          text={state.results[0].overview}\n        />\n      ) : null}\n      <SearchBar setSearchTerm={setSearchTerm} />\n      <Grid header={searchTerm ? \"Search Results\" : \"Popular Movies\"}>\n        {state.results.map((movie) => (\n          <Thumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                : NoImage\n            }\n            movieId={movie.id}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {state.page < state.total_pages && !loading && (\n        <Button text=\"Load More\" callback={() => setIsLoadingMore(true)} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 70px;\n  background: var(--medGrey);\n  color: var(--white);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: var(--maxWidth);\n  padding: 0 20px;\n\n  span {\n    font-size: var(--fontMed);\n    color: var(--whilte);\n    padding-right: 10px;\n\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontSmall);\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// Routes\nimport { Link } from \"react-router-dom\";\n// Styles\nimport { Wrapper, Content } from \"./BreadCrumb.styles\";\n\nconst BreadCrumb = ({ movieTitle }) => (\n  <Wrapper>\n    <Content>\n      <Link to=\"/\">\n        <span>Home</span>\n      </Link>\n      <span>|</span>\n      <span>{movieTitle}</span>\n    </Content>\n  </Wrapper>\n);\n\nBreadCrumb.propTypes = {\n  movieTitle: PropTypes.string,\n};\n\nexport default BreadCrumb;\n","import styled from \"styled-components\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\n\nexport const Wrapper = styled.div`\n  background: ${({ backdrop }) =>\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : \"#000\"};\n  background-size: cover;\n  background-position: center;\n  padding: 40px 20px;\n  animation: animateMovieInfo 1s;\n\n  @keyframes {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  background: rgba(0, 0, 0, 0.7);\n  border-radius: 20px;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    max-height: none;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  padding: 20px 40px;\n  color: var(--white);\n  overflow: hidden;\n\n  .rating-directors {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: var(--white);\n    color: #000;\n    font-weight: 800;\n    border-radius: 50%;\n    margin: 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n    h1 {\n      @media screen and (max-width: 768px) {\n        font-size: var(--fontBig);\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// Components\nimport Thumb from \"../Thumb\";\n// Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\n// Image\nimport NoImage from \"../../images/no_image.jpg\";\n// Styles\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\nimport Movie from \"../Movie\";\n\nconst MovieInfo = ({ movie }) => (\n  <Wrapper backdrop={movie.backdrop_path}>\n    <Content>\n      <Thumb\n        image={\n          movie.poster_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n            : NoImage\n        }\n        clickable={false}\n        alt=\"movie-thumb\"\n      />\n      <Text>\n        <h1>{movie.title}</h1>\n        <h3>PLOT</h3>\n        <p>{movie.overview}</p>\n        <div className=\"rating-directors\">\n          <div>\n            <h3>RATING</h3>\n            <div className=\"score\">{movie.vote_average}</div>\n          </div>\n          <div className=\"director\">\n            <h3>\n              DIRECTOR{\" \"}\n              {movie.directors && movie.directors.length > 1 ? \"S\" : \"\"}\n            </h3>\n            {movie.directors &&\n              movie.directors.map((director) => (\n                <p key={director.credit_id}>{director.name}</p>\n              ))}\n          </div>\n        </div>\n      </Text>\n    </Content>\n  </Wrapper>\n);\n\nMovieInfo.propTypes = {\n  movie: PropTypes.objectOf(PropTypes.any),\n};\n\nexport default MovieInfo;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  width: 100%;\n  margin: 0 auto;\n\n  .column {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--medGrey);\n    border-radius: 20px;\n    margin: 0 20px;\n    flex: 1;\n\n    :first-child {\n      margin-left: 0;\n    }\n    :last-child {\n      margin-right: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    display: block;\n\n    .column {\n      margin: 20px;\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// Helpers\nimport { calcTime, CalcTime, convertMoney } from \"../../helpers\";\n// Styles\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n  <Wrapper>\n    <Content>\n      <div className=\"column\">\n        <p>Running time: {calcTime(time)}</p>\n      </div>\n      <div className=\"column\">\n        <p>Budget: {convertMoney(budget)}</p>\n      </div>\n      <div className=\"column\">\n        <p>Revenue: {convertMoney(revenue)}</p>\n      </div>\n    </Content>\n  </Wrapper>\n);\n\nMovieInfoBar.propTypes = {\n  time: PropTypes.number,\n  budget: PropTypes.number,\n  revenue: PropTypes.number,\n};\n\nexport default MovieInfoBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  color: var(--white);\n  background: var(--darkGrey);\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  h3 {\n    margin: 10 0 0 0;\n  }\n  p {\n    margin: 5px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 15px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// Styles\nimport { Wrapper, Image } from \"./Actor.styles\";\n\nconst Actor = ({ name, character, imageUrl }) => (\n  <Wrapper>\n    <Image src={imageUrl} alt=\"actor-thumb\" />\n    <h3>{name}</h3>\n    <p>{character}</p>\n  </Wrapper>\n);\n\nActor.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  imageUrl: PropTypes.string,\n};\n\nexport default Actor;\n","import { useState, useEffect } from \"react\";\nimport API from \"../API\";\nimport { isPersistedState } from \"../helpers\";\n\nconst useMovieFetch = (movieId) => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setLoading(false);\n\n        const movie = await API.fetchMovie(movieId);\n        const credits = await API.fetchCredits(movieId);\n        // Get Directors Only\n        const directors = credits.crew.filter(\n          (member) => member.job == \"Director\"\n        );\n        setState({\n          ...movie,\n          actors: credits.cast,\n          directors,\n        });\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n\n    const sessionState = isPersistedState(movieId);\n    if (sessionState) {\n      setState(sessionState);\n      setLoading(false);\n      console.log(\"from ss\");\n      return;\n    }\n\n    fetchMovie();\n  }, [movieId]);\n\n  // Write to session storage\n  useEffect(() => {\n    sessionStorage.setItem(movieId, JSON.stringify(state));\n  }, [movieId, state]);\n\n  return { state, loading, error };\n};\n\nexport default useMovieFetch;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n// Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\n// Components\nimport Grid from \"./Grid\";\nimport Spinner from \"./Spinner\";\nimport BreadCrumb from \"./BreadCrumb\";\nimport MovieInfo from \"./MovieInfo\";\nimport MovieInfoBar from \"./MovieInfoBar\";\nimport Actor from \"./Actor\";\n// Hooks\nimport useMovieFetch from \"../hooks/useMovieFetch\";\n\n// Image\nimport NoImage from \"../images/no_image.jpg\";\n\nconst Movie = () => {\n  const { movieId } = useParams();\n  const { state: movie, loading, error } = useMovieFetch(movieId);\n\n  if (loading) return <Spinner />;\n  if (error) return <div>Something went wrong.</div>;\n  return (\n    <>\n      <BreadCrumb movieTitle={movie.original_title} />\n      <MovieInfo movie={movie} />\n      <MovieInfoBar\n        time={movie.runtime}\n        budget={movie.budget}\n        revenue={movie.revenue}\n      />\n      <Grid header=\"Actors\">\n        {movie &&\n          movie.actors &&\n          movie.actors.map((actor) => (\n            <Actor\n              key={actor.credit_id}\n              name={actor.name}\n              character={actor.character}\n              imageUrl={\n                actor.profile_path\n                  ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                  : NoImage\n              }\n            />\n          ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Movie;\n","import React from \"react\";\n\nconst NotFound = () => <div>NotFound</div>;\n\nexport default NotFound;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --maxwidth: 1280px;\n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535;\n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', sans-serif;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n\n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n\n    p {\n      font-size: 1.rem;\n      color: var(--white);\n    }\n  }\n`\n","import React from \"react\";\n// Routing\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// Components\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Movie from \"./components/Movie\";\nimport NotFound from \"./components/NotFound\";\n// Styles\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nconst App = () => (\n  <Router>\n    <Header />\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/:movieId\" element={<Movie />} />\n      <Route path=\"/*\" element={<NotFound />} />\n    </Routes>\n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}